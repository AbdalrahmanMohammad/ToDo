<%-include('../partials/head.ejs')%>

    <body>
        <%-include('../partials/header.ejs')%>
            <main>
                <div class="task-cont">
                    <h1>YOUR TASKS</h1>
                    <ul>
                        <% todos.forEach(todo=> { %>
                            <li class="<%= todo.completed ? 'completed' : '' %>">
                                <div class="title">
                                    <%= todo.title %>
                                </div>
                                <div class="desc">
                                    <%= todo.description %>
                                </div>
                                <div class="created">created at: <span>
                                        <%= todo.createdAt%>
                                    </span></div>
                                <div class="updated">updated at: <span>
                                        <%= todo.updatedAt %>
                                    </span></div>
                                <button class="delete-task-btn" data-id="<%= todo.id %>">delete</button>
                                <button class="edit-task-btn" data-id="<%= todo.id %>">edit</button>
                            </li>
                            <% }) %>
                    </ul>
                    <button>Add Task</button>
                </div>

                <div class="pop-up add-task">
                    <div class="wrapper">
                        <form action="">
                            <div class="close">X</div>
                            <h2>Add a new task</h2>
                            <input class="title-add-task" type="text" name="title" placeholder="title">
                            <input class="desc-add-task" type="text" name="description" placeholder="description">
                            <button class="add-task-button">Add</button>
                        </form>
                    </div>
                </div>
                <div class="pop-up edit-task">
                    <div class="wrapper">
                        <form action="">
                            <div class="close">X</div>
                            <h2>edit the task</h2>
                            <input type="text" class="title-update-task" name="title" placeholder="title">
                            <input type="text" class="desc-update-task" name="description" placeholder="description">
                            <label for="completed">
                                <input type="checkbox" class="comp-update-task" id="completed" name="completed">
                                Completed
                            </label>
                            <button class="update-task-button">update</button>
                        </form>
                    </div>
                </div>
            </main>
    </body>

    <script>
        let updateTaskID;
        let show_addtask_button = document.querySelector('ul+button');
        let close_addtask_button = document.querySelector('.add-task .close');
        let add_task_div = document.querySelector('.add-task');
        // handle showing add task div
        show_addtask_button.addEventListener("click", toggleAddTask);
        close_addtask_button.addEventListener("click", toggleAddTask);
        function toggleAddTask() {
            if (add_task_div.style.display == "block")
                add_task_div.style.display = "none";
            else {
                add_task_div.style.display = "block";
            }
        }
        // handle showing edit task div
        let unorderedList = document.querySelector('ul');
        let close_edittask_button = document.querySelector('.edit-task .close');
        let edit_task_div = document.querySelector('.edit-task');

        unorderedList.addEventListener("click", toggleEditTask);
        close_edittask_button.addEventListener("click", toggleEditTask);
        function toggleEditTask(e) {
            if (e.target.classList.contains("edit-task-btn")) {
                updateTaskID = e.target.dataset.id;
            }
            if (e.target.classList.contains("edit-task-btn") || e.target == close_edittask_button) {
                if (edit_task_div.style.display == "block")
                    edit_task_div.style.display = "none";
                else {
                    edit_task_div.style.display = "block";
                }
            }
        }

        // handle adding new task
        document.querySelector(".add-task-button").addEventListener("click", async (e) => {
            e.preventDefault();

            let title = document.querySelector(".title-add-task").value;
            let description = document.querySelector(".desc-add-task").value;

            try {
                const response = await fetch('/todos', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ title, description })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const data = await response.json();
                console.log('Success:', data);
                redisplay();
            } catch (error) {
                console.error('Error:', error);
            }
        });

        //handle deleting task
        unorderedList.addEventListener("click", async (e) => {
            if (e.target.classList.contains("delete-task-btn")) {
                const todoId = e.target.dataset.id;
                try {
                    const response = await fetch(`/todos/${todoId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        console.log('Todo deleted successfully');
                        e.target.closest('li').remove();
                    } else {
                        console.error('Failed to delete todo:', response.statusText);
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            }
        });

        // handle updating task
        document.querySelector(".update-task-button").addEventListener("click", async (e) => {
            e.preventDefault();

            let title = document.querySelector(".title-update-task").value;
            let description = document.querySelector(".desc-update-task").value;
            let completed = document.querySelector(".comp-update-task").checked;
            completed = !completed;

            try {
                const response = await fetch(`/todos/${updateTaskID}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ title, description, completed })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const data = await response.json();
                console.log('Success:', data);
                redisplay();
            } catch (error) {
                console.error('Error:', error);
            }
        });

        // class to reget the tasks
        async function redisplay() {
            try {
                const response = await fetch(`/todos`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify()
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const data = await response.json();
                console.log('Success:', data);
                unorderedList.innerHTML = '';

                // Generate and append new list items
                data.forEach(todo => {
                    const li = document.createElement('li');
                    li.className = todo.completed ? 'completed' : '';

                    li.innerHTML = `
        <div class="title">${todo.title}</div>
        <div class="desc">${todo.description}</div>
        <div class="created">created at: <span>${new Date(todo.createdAt)}</span></div>
        <div class="updated">updated at: <span>${new Date(todo.updatedAt)}</span></div>
        <button class="delete-task-btn" data-id="${todo.id}">delete</button>
        <button class="edit-task-btn" data-id="${todo.id}">edit</button>
    `;

                    unorderedList.appendChild(li);
                });
            } catch (error) {
                console.error('Error:', error);
            }
        }
    </script>

    </html>